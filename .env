ENV_STATE=dev

# base configs
# tiangolo uvicorn-gunicorn-fastapi-docker configs
MODULE_NAME=app.main
VARIABLE_NAME=app
#- GUNICORN_CONF="/app/custom_gunicorn_conf.py"
WORKERS_PER_CORE=1
WEB_CONCURRENCY=2
HOST=0.0.0.0
PORT=5000
LOG_LEVEL=info
#- WORKER_CLASS="uvicorn.workers.UvicornWorker"
TIMEOUT=120

# aws
AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
AWS_DEPLOY=true
AWS_LAMBDA_DEPLOY=true
AWS_SM_ENDPOINT_URL=https://secretsmanager.eu-west-1.amazonaws.com
AWS_SM_SERVICE_NAME=secretsmanager
AWS_REGION_NAME=eu-west-1

# dev configs
DEV_ROOT_PATH=
DEV_AWS_LAMBDA_DEPLOY=false
DEV_LOG_PATH=/tmp
DEV_LOG_FILENAME=fastgeoapi.log
DEV_LOG_LEVEL=debug
# loguru uses multiprocessing queue that breaks AWS lambda
DEV_LOG_ENQUEUE=true
DEV_LOG_ROTATION=1 days
DEV_LOG_RETENTION=1 months
DEV_LOG_FORMAT='<green>{time:YYYY-MM-DD HH:mm:ss.SSS}</green> | <level>{level: <8}</level> | <cyan>{name}</cyan>:<cyan>{function}</cyan>:<cyan>{line}</cyan> [id:{extra[request_id]}] - <level>{message}</level>'
# opa
DEV_OPA_ENABLED=false
DEV_OPA_URL=http://localhost:8383
# api-keys
DEV_API_KEY_ENABLED=false
DEV_PYGEOAPI_KEY_GLOBAL=pygeoapi
# oidc-full
DEV_APP_URI=http://localhost:5000
DEV_OIDC_WELL_KNOWN_ENDPOINT=http://localhost:8282/realms/pygeoapi/.well-known/openid-configuration
DEV_OIDC_CLIENT_ID=pygeoapi-client
DEV_OIDC_CLIENT_SECRET=2yholx8r3mqyUJaOoJiZhcqvQDQwmgyD
# oidc-jwks-only
DEV_JWKS_ENABLED=true
# DEV_OIDC_JWKS_ENDPOINT=https://ssopre.comune.roma.it/ssoservice/oauth2/realms/root/realms/public/connect/jwk_uri
DEV_OIDC_JWKS_ENDPOINT=https://uat.interop.pagopa.it/.well-known/jwks.json
# pygeoapi
DEV_PYGEOAPI_BASEURL=http://localhost:5000
DEV_PYGEOAPI_CONFIG=pygeoapi-config.yml
DEV_PYGEOAPI_OPENAPI=pygeoapi-openapi.yml
# fastgeoapi
DEV_FASTGEOAPI_CONTEXT=/geoapi

# prod configs
PROD_ROOT_PATH=
PROD_AWS_LAMBDA_DEPLOY=true
PROD_LOG_PATH=/tmp
PROD_LOG_FILENAME=fastgeoapi.log
PROD_LOG_LEVEL=info
# loguru uses multiprocessing queue that breaks AWS lambda
PROD_LOG_ENQUEUE=false
PROD_LOG_ROTATION=1 days
PROD_LOG_RETENTION=1 months
PROD_LOG_FORMAT='<green>{time:YYYY-MM-DD HH:mm:ss.SSS}</green> | <level>{level: <8}</level> | <cyan>{name}</cyan>:<cyan>{function}</cyan>:<cyan>{line}</cyan> [id:{extra[request_id]}] - <level>{message}</level>'
# opa
PROD_OPA_ENABLED=false
PROD_OPA_URL=http://localhost:8383
# api-keys
PROD_API_KEY_ENABLED=true
PROD_PYGEOAPI_KEY_GLOBAL=pygeoapi
# oidc-full
PROD_APP_URI=http://localhost:5000
PROD_OIDC_WELL_KNOWN_ENDPOINT=http://localhost:8282/realms/pygeoapi/.well-known/openid-configuration
PROD_OIDC_CLIENT_ID=pygeoapi-client
PROD_OIDC_CLIENT_SECRET=2yholx8r3mqyUJaOoJiZhcqvQDQwmgyD
# oidc-jwks-only
PROD_JWKS_ENABLED=false
PROD_OIDC_JWKS_ENDPOINT=
# pygeoapi
PROD_PYGEOAPI_BASEURL=http://localhost:5000
PROD_PYGEOAPI_CONFIG=pygeoapi-config.yml
PROD_PYGEOAPI_OPENAPI=pygeoapi-openapi.yml
# fastgeoapi
PROD_FASTGEOAPI_CONTEXT=/geoapi
