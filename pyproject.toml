[tool.poetry]
name = "fastgeoapi"
version = "0.0.1"
description = "fastgeoapi"
authors = ["Francesco Bartoli <francesco.bartoli@geobeyond.it>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/geobeyond/fastgeoapi"
repository = "https://github.com/geobeyond/fastgeoapi"
documentation = "https://fastgeoapi.readthedocs.io"
classifiers = ["Development Status :: 1 - Planning"]
packages = [
    { include = "cli.py", from = "." },
    { include = "app" },
    { include = "app/**/*.py" },
]

[tool.poetry.urls]
Changelog = "https://github.com/geobeyond/fastgeoapi/releases"

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
mangum = "^0.14.1"
loguru = "^0.7.2"
fastapi-opa = "^1.4.8"
# fix https://github.com/rasterio/rasterio/issues/2333
rasterio = "1.3.9"
# pin pygeoapi before reverting pydantic to v1
pygeoapi = { git = "https://github.com/francbartoli/pygeoapi.git", branch = "pydantic-v2" }
uvicorn = { extras = ["standard"], version = "^0.25.0" }
fastapi = { extras = ["all"], version = "^0.110" }
typer = { extras = ["all"], version = "^0.12.0" }
fastapi-key-auth = "^0.12.0"
sqlalchemy = "^1.4.50"
geoalchemy2 = "^0.14.4"
shapely = "<2.0"
psycopg2 = "^2.9.7"
openapi-pydantic = "^0.4.0"
pygeofilter = { git = "https://github.com/geopython/pygeofilter.git", branch = "main" }
pydantic-settings = "^2.1.0"
authlib = "^1.3.0"
cachetools = "^5.3.2"
json-ref-dict = "^0.7.2"

[tool.poetry.scripts]
fastgeoapi = "cli:app"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
coverage = { extras = ["toml"], version = "^6.5.0" }
typeguard = "^2.13.3"
xdoctest = { extras = ["colors"], version = "^0.15.10" }
# datamodel-code-generator = {extras = ["http"], version = "^0.22.1"}
pre-commit = "^2.21.0"
black = "^24.3.0"
flake8-bandit = "^4.1.1"
flake8-bugbear = "^21.11.29"
flake8-docstrings = "^1.7.0"
flake8-rst-docstrings = "^0.2.7"
pep8-naming = "^0.12.1"
darglint = "^1.8.1"
reorder-python-imports = "^3.9.0"
pre-commit-hooks = "^4.0.1"
pyupgrade = "^3.3.1"
termynal = "^0.12.0"
mkdocs = "^1.3.0"
mkdocs-material = "^9.5.9"
mkdocs-material-extras = "^0.0.8"
mkdocs-material-extensions = "^1.1.1"
bandit = "^1.7.5"
ipython = "<8.12"
safety = "<2.0"
mypy = "^1.5.0"
commitizen = "^3.6.0"
fencer = { git = "https://github.com/francbartoli/fencer.git", branch = "feature/support-remote-schema" }
openapi-resolver = "^0.0.6"
mkdocs-swagger-ui-tag = "^0.6.8"
schemathesis = "^3.25.6"

[tool.coverage.paths]
source = [".", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true
source = ["fastgeoapi", "tests"]

[tool.coverage.report]
show_missing = true
fail_under = 100

[tool.mypy]
exclude = ".venv"
strict = true
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "$version"
version_scheme = "semver"
version_provider = "poetry"
update_changelog_on_bump = true
major_version_zero = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
