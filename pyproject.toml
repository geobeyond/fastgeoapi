[tool.poetry]
name = "fastgeoapi"
version = "0.0.0"
description = "fastgeoapi"
authors = ["Francesco Bartoli <francesco.bartoli@geobeyond.it>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/geobeyond/fastgeoapi"
repository = "https://github.com/geobeyond/fastgeoapi"
documentation = "https://fastgeoapi.readthedocs.io"
classifiers = [
    "Development Status :: 1 - Planning",
]
packages = [
    { include = "cli.py" },
    { include = "app" },
    { include = "app/**/*.py" },
]

[tool.poetry.urls]
Changelog = "https://github.com/geobeyond/fastgeoapi/releases"

[tool.poetry.dependencies]
python = "^3.8"
mangum = "^0.14.1"
loguru = "^0.6.0"
jinja2 = "3.0.3"
fastapi-opa = "^1.3.3"
rasterio = "1.3a3" # fix https://github.com/rasterio/rasterio/issues/2333
pygeoapi = {git = "https://github.com/geopython/pygeoapi", rev = "master"}
uvicorn = {extras = ["standard"], version = "^0.20.0"}
fastapi = "^0.92.0"
typer = {extras = ["all"], version = "^0.7.0"}
pydantic = {extras = ["dotenv", "email"], version = "^1.10.2"}
nest-asyncio = "^1.5.6"
fastapi-key-auth = "^0.9.0"
sqlalchemy = "^2.0.9"
geoalchemy2 = "^0.12.5"
shapely = "<2.0"
psycopg2 = "^2.9.5"

[tool.poetry.scripts]
fastgeoapi = "fastgeoapi.cli:main"

[tool.poetry.group.dev.dependencies]
pytest = "^6.2.5"
coverage = {extras = ["toml"], version = "^6.1"}
typeguard = "^2.13.2"
xdoctest = {extras = ["colors"], version = "^0.15.10"}
pre-commit = "^2.15.0"
black = "^22.12.0"
flake8-bandit = "^4.1.1"
flake8-bugbear = "^21.9.2"
flake8-docstrings = "^1.6.0"
flake8-rst-docstrings = "^0.2.3"
pep8-naming = "^0.12.1"
darglint = "^1.8.1"
reorder-python-imports = "^3.9.0"
pre-commit-hooks = "^4.0.1"
pyupgrade = "^3.3.1"
mkdocs = "^1.3.0"
mkdocs-material = "^8.2.9"
mkdocs-material-extras = "^0.0.8"
mkdocs-material-extensions = "^1.0.3"
bandit = "^1.7.2"
ipython = "^8.2.0"
safety = "<2.0"
mypy = "^0.991"

[tool.coverage.paths]
source = [".", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true
source = ["fastgeoapi", "tests"]

[tool.coverage.report]
show_missing = true
fail_under = 100

[tool.mypy]
strict = true
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
